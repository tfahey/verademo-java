name: .5-SAST-Check-Pull-Request-or-Branch

# This workflow will checkout the code, build the app, and scan with the Veracode Static Pipeline Scanner.
on:
  pull_request:
    branches: [ main, release/* ]
 # Enables manual runs
  workflow_dispatch:
  # Runs "Every at 5:04" (see https://crontab.guru)
  #schedule:
  # - cron: "4 5 * * *"

permissions:
  contents: read
  pull-requests: write

jobs:
  SAST-Check-Pull-Request-or-Branch:
    runs-on: [ubuntu-latest]
    steps:
   
# Checkout code
      - uses: actions/checkout@v2
    
# Setup Java
      - uses: actions/setup-java@v1
        with:
          java-version: 1.8
    
# Build with Maven          
      - name: Build with Maven
        working-directory: ./app/
        run: mvn clean install
    
# Download Veracode Static Pipeline Scanner     
      - name: Download Veracode Static Pipeline Scanner
        run: |
          curl https://downloads.veracode.com/securityscan/pipeline-scan-LATEST.zip -o veracode.zip
          unzip -o veracode.zip
      
      - name: Run Veracode Static Pipeline Scanner
        continue-on-error: true
        run: >  
         echo ${{secrets.VERACODE_API_ID}}
         
# In this configuration, the Pipeline scanner will check against the baseline file and see if there are any new flaws compared to the baseline.  If there is, it will break the build.  If not, the build will continue.  
      - name: Run Veracode Static Pipeline Scanner
        continue-on-error: true
        run: >
         java -jar pipeline-scan.jar --veracode_api_id "${{secrets.VERACODE_API_ID}}" --veracode_api_key "${{secrets.VERACODE_API_KEY}}"
         --file app/target/verademo.war
         --summary_output true
         --baseline_file vc-pipeline-scanner-baseline.json
         --project_name VeraDemo-Java-GitHub
      
      - id: get-comment-body
        if: ${{ github.head_ref != '' }}
        run: |
          body=$(cat results.txt)
          body="${body//$'===\n---'/'===\n<details><summary>details</summary><p>\n---'}"
          body="${body//$'---\n\n==='/'---\n</p></details>\n==='}"
          body="${body//$'\n'/'<br>'}"
          echo ::set-output name=body::$body
      - name: Add comment to PR
        if: ${{ github.head_ref != '' }}
        uses: peter-evans/create-or-update-comment@v1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.pull_request.number }}
          body: ${{ steps.get-comment-body.outputs.body }}
          reactions: rocket    
        
# Artifact the results for later use
      - name: Archive Results.json & Results.txt from Veracode Static Pipeline Scanner
        uses: actions/upload-artifact@v4.6.2
        with:
          # Artifact name
          name: Pipeline Scanner Results
          path: results.*
